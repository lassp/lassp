
<style>
<!--

#map-canvas {
  height: 400px;
}

#map-canvas img {
  max-width: none;
}

#map-canvas label {
  width: auto; display:inline;
}

-->
</style>


<div class="row-fluid">
    <div class="span12" id="map-canvas"></div>
</div>

<div class="row-fluid">

    <div class="span4">
        <h2><?php echo $this->translate('Follow Development') ?></h2>
        <p><?php echo sprintf($this->translate('Zend Framework 2 is under active development. If you are interested in following the development of ZF2, there is a special ZF2 portal on the official Zend Framework website which provides links to the ZF2 %swiki%s, %sdev blog%s, %sissue tracker%s, and much more. This is a great resource for staying up to date with the latest developments!'), '<a href="http://framework.zend.com/wiki/display/ZFDEV2/Home">', '</a>', '<a href="http://framework.zend.com/zf2/blog">', '</a>', '<a href="https://github.com/zendframework/zf2/issues">', '</a>') ?></p>
        <p><a class="btn btn-success" href="http://framework.zend.com/zf2" target="_blank"><?php echo $this->translate('ZF2 Development Portal') ?> &raquo;</a></p>
    </div>

    <div class="span4">
        <h2><?php echo $this->translate('Discover Modules') ?></h2>
        <p><?php echo sprintf($this->translate('The community is working on developing a community site to serve as a repository and gallery for ZF2 modules. The project is available %son GitHub%s. The site is currently live and currently contains a list of some of the modules already available for ZF2.'), '<a href="https://github.com/zendframework/modules.zendframework.com">', '</a>') ?></p>
        <p><a class="btn btn-success" href="http://modules.zendframework.com/" target="_blank"><?php echo $this->translate('Explore ZF2 Modules') ?> &raquo;</a></p>
   </div>

   <div class="span4">
       <h2><?php echo $this->translate('Help &amp; Support') ?></h2>
       <p><?php echo sprintf($this->translate('If you need any help or support while developing with ZF2, you may reach us via IRC: %s#zftalk on Freenode%s. We\'d love to hear any questions or feedback you may have regarding the beta releases. Alternatively, you may subscribe and post questions to the %smailing lists%s.'), '<a href="irc://irc.freenode.net/zftalk">', '</a>', '<a href="http://framework.zend.com/wiki/display/ZFDEV/Mailing+Lists">', '</a>') ?></p>
       <p><a class="btn btn-success" href="http://webchat.freenode.net?channels=zftalk" target="_blank"><?php echo $this->translate('Ping us on IRC') ?> &raquo;</a></p>
   </div>
</div>


<script type="text/javascript"
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFJ8V1qydk_HtNbvdlkK2yAkYf5GXNhTI&sensor=false">
</script>
<script type="text/javascript">

  var planetOptions = {};
  var bounds;
  var map;
  var planetDonut;
  var center = new google.maps.LatLng(34.11811,-118.300313);

  google.maps.event.addDomListener(window, 'load', initialize);

  planetOptions['mercury'] = {
    minMiles: .52,
    maxMiles: .79,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#FF0000",
    fillOpacity: 0.35
  };
  planetOptions['venus'] = {
    minMiles: 1.21,
    maxMiles: 1.23,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#00FF00",
    fillOpacity: 0.35
  };
  planetOptions['earth'] = {
    minMiles: 1.66,
    maxMiles: 1.71,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#005CFF",
    fillOpacity: 0.35
  }
  planetOptions['mars'] = {
    minMiles: 2.33,
    maxMiles: 2.81,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#FF0000",
    fillOpacity: 0.35
  }
  planetOptions['asteroids'] = {
    minMiles: 2.99,
    maxMiles: 6.51,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#A2A2A3",
    fillOpacity: 0.25
  }
  planetOptions['jupiter'] = {
    minMiles: 8.35,
    maxMiles: 9.20,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#F96806",
    fillOpacity: 0.35
  }
  planetOptions['saturn'] = {
    minMiles: 15.21,
    maxMiles: 16.95,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#FF00FF",
    fillOpacity: 0.35
  }
  planetOptions['uranus'] = {
    minMiles: 30.90,
    maxMiles: 33.85,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#00FF67",
    fillOpacity: 0.35
  }
  planetOptions['neptune'] = {
    minMiles: 50.09,
    maxMiles: 51.23,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#0000FF",
    fillOpacity: 0.35
  }
  planetOptions['pluto'] = {
    minMiles: 50.00,
    maxMiles: 83.13,
    strokeColor: "#0000FF",
    strokeOpacity: 0.8,
    strokeWeight: 0,
    fillColor: "#00FFF8",
    fillOpacity: 0.20
  }


  function initialize() {
    var mapOptions = {
      center: new google.maps.LatLng(34.11811,-118.300313),
      zoom: 20,
//       mapTypeId: google.maps.MapTypeId.ROADMAP,
      mapTypeId: google.maps.MapTypeId.HYBRID,
      tilt: 0
    };

    map = new google.maps.Map(document.getElementById("map-canvas"),mapOptions);

    bounds = new google.maps.LatLngBounds();

    for (var planet in planetOptions) {
      // Construct the circle for each value in planetOptions.
      var donutOptions = {
        paths: [drawCircle(center, planetOptions[planet].maxMiles, -1),
                drawCircle(center, planetOptions[planet].minMiles, 1)],
        strokeColor: planetOptions[planet].strokeColor,
        strokeOpacity: planetOptions[planet].strokeOpacity,
        strokeWeight: planetOptions[planet].strokeWeight,
        fillColor: planetOptions[planet].fillColor,
        fillOpacity: planetOptions[planet].fillOpacity
      };

      planetDonut = new google.maps.Polygon(donutOptions);

      planetDonut.setMap(map);

    }

     var imageBounds = new google.maps.LatLngBounds(
         new google.maps.LatLng(34.117975,-118.300488), // lower left
         new google.maps.LatLng(34.118235,-118.300179)  // upper right
     );

    var sunIcon = new google.maps.GroundOverlay(
        "/img/sun-icon.png",
        imageBounds);

    sunIcon.setMap(map);

    //map.fitBounds(bounds);

    map.setZoom(20)
    setTimeout("map.setZoom(18)", 5000)
    setTimeout("map.setZoom(13)", 8000)
    setTimeout("map.setZoom(8)", 11000)

  }

  function drawCircle(point, radius, dir) {
    var d2r = Math.PI / 180;   // degrees to radians
    var r2d = 180 / Math.PI;   // radians to degrees
    var earthsradius = 3963;   // 3963 is the radius of the earth in miles

     var points = 32;

     // find the raidus in lat/lon
     var rlat = (radius / earthsradius) * r2d;
     var rlng = rlat / Math.cos(point.lat() * d2r);


     var extp = new Array();
     if (dir==1)  {
      var start=0;var end=points+1 // one extra here makes sure we connect the
     } else {
      var start=points+1;var end=0
     }

     for (var i=start; (dir==1 ? i < end : i > end); i=i+dir)
     {
        var theta = Math.PI * (i / (points/2));
        ey = point.lng() + (rlng * Math.cos(theta)); // center a + radius x * cos(theta)
        ex = point.lat() + (rlat * Math.sin(theta)); // center b + radius y * sin(theta)
        extp.push(new google.maps.LatLng(ex, ey));
        bounds.extend(extp[extp.length-1]);
     }
     // alert(extp.length);
     return extp;
   }

</script>
